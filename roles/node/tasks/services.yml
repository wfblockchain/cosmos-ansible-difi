---
- name: configure systemd service for chain
  when: not (use_cosmovisor | default(false) | bool)
  template:
    src: chain.service.j2
    dest: "/etc/systemd/system/{{node_service_name}}.service"

- name: configure systemd service for cosmovisor
  when: (use_cosmovisor | default(false) | bool)
  template:
    src: cosmovisor.service.j2
    dest: "/etc/systemd/system/{{cosmovisor_service_name}}.service"

- name: Restart journalctl so that the logs may flow
  when: (chain_start | default(false) | bool)
  systemd:
    state: restarted
    name: systemd-journald

- name: Enable chain systemd service
  when: (chain_start | default(false) | bool) and (not use_cosmovisor | default(false) | bool)
  systemd:
    daemon_reload: true
    state: stopped
    enabled: true
    name: "{{node_service_name}}"

- name: Start chain systemd service
  when: (chain_start | default(false) | bool) and ((not use_cosmovisor | default(false) | bool) and (not reboot | default(false) | bool))
  systemd:
    daemon_reload: true
    state: restarted
    enabled: true
    name: "{{node_service_name}}"
  tags:
    - chain_start
    - chain_restart

- name: Enable cosmovisor systemd service
  when: (chain_start | default(false) | bool) and (use_cosmovisor | default(false) | bool)
  systemd:
    daemon_reload: true
    state: stopped
    enabled: true
    name: "{{cosmovisor_service_name}}"

- name: Start cosmovisor systemd service
  when: (chain_start | default(false) | bool) and ((use_cosmovisor | default(false) | bool) and (not reboot | default(false) | bool))
  systemd:
    daemon_reload: true
    state: restarted
    enabled: true
    name: "{{cosmovisor_service_name}}"
  tags:
    - chain_start
    - chain_restart

- name: Running the {{ chain_id }} chain
  shell: |
    export PATH=$PATH:$HOME/go/bin
    mkdir -p {{chain_home}}/logs
    {{ chain_bin }} start --log_level debug --pruning nothing --grpc.address :10192 --home {{ chain_home }} > {{chain_home}}/logs/chain.log 2>&1 &
  async: 10
  poll: 5
  become: yes
  ignore_errors: true
